"""Initial migration.

Revision ID: 3167b84db4e1
Revises: 
Create Date: 2022-12-18 08:01:11.544043

"""
from alembic import op
import sqlalchemy as sa

# revision identifiers, used by Alembic.
revision = '3167b84db4e1'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('contacts',
                    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
                    sa.Column('created_on', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'),
                              nullable=False),
                    sa.Column('updated_on', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'),
                              nullable=False),
                    sa.Column('first_name', sa.String(length=64), nullable=False),
                    sa.Column('last_name', sa.String(length=64), nullable=True),
                    sa.Column('email', sa.String(length=64), nullable=True),
                    sa.Column('birthday', sa.DateTime(), nullable=True),
                    sa.Column('address', sa.String(length=128), nullable=True),
                    sa.PrimaryKeyConstraint('id'),
                    sa.UniqueConstraint('email')
                    )
    with op.batch_alter_table('contacts', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_contacts_first_name'), ['first_name'], unique=False)

    op.create_table('notes',
                    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
                    sa.Column('created_on', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'),
                              nullable=False),
                    sa.Column('updated_on', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'),
                              nullable=False),
                    sa.Column('header', sa.String(length=64), nullable=False),
                    sa.Column('content', sa.String(length=512), nullable=True),
                    sa.PrimaryKeyConstraint('id')
                    )
    with op.batch_alter_table('notes', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_notes_header'), ['header'], unique=True)

    op.create_table('tags',
                    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
                    sa.Column('created_on', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'),
                              nullable=False),
                    sa.Column('updated_on', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'),
                              nullable=False),
                    sa.Column('name', sa.String(length=16), nullable=False),
                    sa.PrimaryKeyConstraint('id')
                    )
    with op.batch_alter_table('tags', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_tags_name'), ['name'], unique=True)

    op.create_table('notes_tags',
                    sa.Column('note_id', sa.Integer(), nullable=False),
                    sa.Column('tag_id', sa.Integer(), nullable=False),
                    sa.ForeignKeyConstraint(['note_id'], ['notes.id'], ondelete='CASCADE'),
                    sa.ForeignKeyConstraint(['tag_id'], ['tags.id'], ondelete='CASCADE'),
                    sa.PrimaryKeyConstraint('note_id', 'tag_id')
                    )
    op.create_table('phones',
                    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
                    sa.Column('created_on', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'),
                              nullable=False),
                    sa.Column('updated_on', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'),
                              nullable=False),
                    sa.Column('contact_id', sa.Integer(), nullable=False),
                    sa.Column('phone_num', sa.String(length=12), nullable=False),
                    sa.ForeignKeyConstraint(['contact_id'], ['contacts.id'], ondelete='CASCADE'),
                    sa.PrimaryKeyConstraint('id')
                    )
    with op.batch_alter_table('phones', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_phones_phone_num'), ['phone_num'], unique=True)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('phones', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_phones_phone_num'))

    op.drop_table('phones')
    op.drop_table('notes_tags')
    with op.batch_alter_table('tags', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_tags_name'))

    op.drop_table('tags')
    with op.batch_alter_table('notes', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_notes_header'))

    op.drop_table('notes')
    with op.batch_alter_table('contacts', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_contacts_first_name'))

    op.drop_table('contacts')
    # ### end Alembic commands ###
